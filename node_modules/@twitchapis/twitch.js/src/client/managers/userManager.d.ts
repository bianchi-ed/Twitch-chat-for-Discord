import { ITwitchUserStateTags } from '../../interfaces';
import { BasicUserStructure, UserStructure } from '../../structures';
import { Collection } from '@discordjs/collection';
import { Client } from '..';
export declare class UserManager {
    cache: Collection<string, UserStructure>;
    private client;
    constructor(client: Client);
    /**
     * @description Get a user from the cache
     * @param {string} userName - The username of the user to get
     * @returns {UserStructure} - The user
     */
    get(userName: string): UserStructure;
    /**
     * @description Check if a user is in the cache
     * @param {string} userName - The username of the user to check
     * @returns {boolean} - If the user is in the cache return true else false
     */
    has(userName: string): boolean;
    /**
     * @description Set a user in the cache
     * @param {string} userName - The username of the user to set
     * @param {UserStructure} user - The user to set
     * @returns {Collection<string, UserStructure>} - The updated cache
     */
    set(userName: string, user: UserStructure): Collection<string, UserStructure>;
    /**
     * @description Add a user to the cache
     * @param {UserStructure} user - The user to add to the cache
     * @returns {Collection<string, UserStructure>} - The updated cache
     */
    addUser(user: UserStructure): Collection<string, UserStructure>;
    /**
     * @private
     */
    generateUser(userName: string): UserStructure;
    /**
     * @private
     */
    generateUserFromTwitch(userName: string, tags: ITwitchUserStateTags): UserStructure;
    /**
     * @private
     */
    generateBasicUserFromTwitch(userName: string, tags: ITwitchUserStateTags): BasicUserStructure;
    /**
     * @private
     */
    updateUser(userName: string, tags: ITwitchUserStateTags): UserStructure;
    /**
     * @private
     */
    updateFromTags(user: UserStructure, tags: ITwitchUserStateTags): UserStructure;
    /**
     * @private
     */
    updateBasicFromTags(user: BasicUserStructure, tags: ITwitchUserStateTags): BasicUserStructure;
}
//# sourceMappingURL=userManager.d.ts.map