"use strict";
/* eslint-disable no-unused-vars */
Object.defineProperty(exports, "__esModule", { value: true });
exports.defaultOptions = exports.EWebSocketType = void 0;
const logger_js_1 = require("@promisepending/logger.js");
var EWebSocketType;
(function (EWebSocketType) {
    EWebSocketType["ws"] = "ws";
    EWebSocketType["wss"] = "wss";
})(EWebSocketType = exports.EWebSocketType || (exports.EWebSocketType = {}));
exports.defaultOptions = {
    connectionWaitTimeout: 10000,
    loginWaitInterval: 1000,
    loginWaitTimeout: 10000,
    autoLogEndEnabled: false,
    autoLogEndUncaughtException: true,
    channels: [],
    connectedChannels: [],
    debug: false,
    fetchAllChatters: true,
    http: {
        host: 'https://tmi.twitch.tv',
        hostID: 'https://id.twitch.tv',
        headers: {
            'User-Agent': 'TwitchJsApi/2.0.0',
        },
    },
    messageCacheLifetime: 60,
    messageCacheMaxSize: 100,
    messageSweepInterval: 10,
    retryInterval: 1000,
    retryLimit: Infinity,
    sync: false,
    syncInterval: 1000,
    ws: {
        host: 'irc-ws.chat.twitch.tv',
        port: 443,
        type: EWebSocketType.wss,
    },
    loggerOptions: {
        defaultLevel: logger_js_1.ELoggerLevel.INFO,
        prefix: '',
        coloredBackground: false,
        allLineColored: false,
        debug: false,
        disableFatalCrash: false,
    },
    prefix: '',
    disableFatalCrash: false,
};
